@model RegisterVM

@{
    ViewBag.Title = "Register";
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <title>INSPINIA | Login</title>

    <link href="~/Content/bootstrap.min.css" rel="stylesheet">
    <link href="~/Fonts/font-awesome/css/font-awesome.css" rel="stylesheet">

    <link href="~/Content/animate.css" rel="stylesheet">
    <link href="~/Content/style.css" rel="stylesheet">

</head>

<body class="gray-bg">

    <div class="middle-box text-center  animated fadeInDown">
        <div>
            <div>

                <h1 class="logo-name">ELM+</h1>

            </div>
            <h3>Welcome to IN+</h3>
            <p>
                Perfectly designed and precisely prepared admin theme with over 50 pages with extra new web app views.
            </p>
            <p>Login in. To see it in action.</p>
            <div class="ibox-content">

                @using (Html.BeginForm("Login", "Account", new { returnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "m-t", role = "form" }))
                {

                    @Html.AntiForgeryToken()

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group">

                        @Html.LabelFor(model => model.User.FirstName)

                        @Html.TextBoxFor(m => m.User.FirstName, new { @class = "form-control", placeholder = "First Name" })
                        @Html.ValidationMessageFor(m => m.Username, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.PasswordFor(m => m.User.LastName, new { @class = "form-control", placeholder = "Last Name" })
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    </div>

                    <button type="submit" class="btn btn-primary block full-width m-b">Sign Up</button>

                }

                @*@using (Html.BeginForm("Register", "Account", null, FormMethod.Post, new { @class="m-t", enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                                @Html.ValidationSummary(true)
                                <div class="form-group">

                                    @Html.LabelFor(model => model.User.FirstName, new { @class = "col-sm-2 control-label" })

                                    <div class="col-sm-10">
                                        @Html.EditorFor(model => model.User.FirstName)
                                        @Html.ValidationMessageFor(model => model.User.FirstName, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">

                                    @Html.LabelFor(model => model.User.LastName, new { @class = "col-sm-2 control-label" })

                                    <div class="col-sm-10">
                                        @Html.EditorFor(model => model.User.LastName)
                                        @Html.ValidationMessageFor(model => model.User.LastName, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">

                                    @Html.LabelFor(model => model.Username, new { @class = "col-sm-2 control-label" })

                                    <div class="col-sm-10">
                                        @Html.EditorFor(model => model.Username)
                                        @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">

                                    @Html.LabelFor(model => model.Email, new { @class = "col-sm-2 control-label" })

                                    <div class="col-sm-10">
                                        @Html.EditorFor(model => model.Email)
                                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Password, new { @class = "col-sm-2 control-label" })

                                    <div class="col-sm-10">
                                        @Html.EditorFor(model => model.Password)
                                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.ConfirmPassword, new { @class = "col-sm-2 control-label" })

                                    <div class="col-sm-10">
                                        @Html.EditorFor(model => model.ConfirmPassword)
                                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">

                                    @Html.LabelFor(model => model.Phone, new { @class = "col-sm-2 control-label" })

                                    <div class="col-sm-10">
                                        @Html.EditorFor(model => model.Phone)
                                        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">

                                    @Html.LabelFor(model => model.User.Gender, new { @class = "col-sm-2 control-label" })

                                    <div class="col-sm-10">
                                        @Html.EnumDropDownListFor(model => model.User.Gender, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.User.Gender, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">

                                    @Html.LabelFor(model => model.User.Bio, new { @class = "col-sm-2 control-label" })

                                    <div class="col-sm-10">
                                        @Html.TextAreaFor(model => model.User.Bio, new { @class = "form-control", @width = 120 })
                                        @Html.ValidationMessageFor(model => model.User.Bio, "", new { @class = "text-danger" })
                                    </div>
                                </div>


                                <div class="form-group">
                                    @Html.LabelFor(model => model.User.ProfilePicturePath, new { @class = "col-sm-2 control-label" })
                                    <div class="col-sm-10">
                                        <input type="file" name="file" />
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" class="btn btn-primary" value="Create" />
                                    </div>
                                </div>
                }*@
            </div>

            <p class="m-t"> <small>Inspinia we app framework base on Bootstrap 3 &copy; 2015</small> </p>
        </div>
    </div>

</body>

</html>



