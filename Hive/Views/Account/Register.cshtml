@model Hive.Models.ViewModels.RegisterVM

@{
    ViewBag.Title = "Register";
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>Create Member</h2>
        <ol class="breadcrumb">
            <li>
                <a href="@Url.Action("Dashboard_1", "Dashboards")">Home</a>
            </li>
            <li>
                <a>User</a>
            </li>
            <li class="active">
                <strong0>Register</strong0>
            </li>
        </ol>
    </div>
    <div class="col-lg-2">

    </div>
</div>


<div class="wrapper wrapper-content animated fadeInRight">

    @using (Html.BeginForm("Register", "Account", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="row">
            <div class="col-lg-12">
                <div class="ibox float-e-margins">
                    <div class="ibox-title">
                        <h5>Create User</h5>
                        <div class="ibox-tools">
                            <a class="collapse-link">
                                <i class="fa fa-chevron-up"></i>
                            </a>
                            @*<a class="dropdown-toggle" data-toggle="dropdown" href="#">
                                    <i class="fa fa-wrench"></i>
                                </a>
                                <ul class="dropdown-menu dropdown-user">
                                    <li>
                                        <a href="#">Config option 1</a>
                                    </li>
                                    <li>
                                        <a href="#">Config option 2</a>
                                    </li>
                                </ul>
                                <a class="close-link">
                                    <i class="fa fa-times"></i>
                                </a>*@
                        </div>
                    </div>
                    <div class="ibox-content">
                        <div class="form-horizontal">
                            @Html.ValidationSummary(true)
                            <div class="form-group">

                                @Html.LabelFor(model => model.User.FirstName, new { @class = "col-sm-2 control-label" })

                                <div class="col-sm-10">
                                    @Html.EditorFor(model => model.User.FirstName)
                                    @Html.ValidationMessageFor(model => model.User.FirstName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">

                                @Html.LabelFor(model => model.User.LastName, new { @class = "col-sm-2 control-label" })

                                <div class="col-sm-10">
                                    @Html.EditorFor(model => model.User.LastName)
                                    @Html.ValidationMessageFor(model => model.User.LastName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">

                                @Html.LabelFor(model => model.Username, new { @class = "col-sm-2 control-label" })

                                <div class="col-sm-10">
                                    @Html.EditorFor(model => model.Username)
                                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">

                                @Html.LabelFor(model => model.Email, new { @class = "col-sm-2 control-label" })

                                <div class="col-sm-10">
                                    @Html.EditorFor(model => model.Email)
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Password, new { @class = "col-sm-2 control-label" })

                                <div class="col-sm-10">
                                    @Html.EditorFor(model => model.Password)
                                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ConfirmPassword, new { @class = "col-sm-2 control-label" })

                                <div class="col-sm-10">
                                    @Html.EditorFor(model => model.ConfirmPassword)
                                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="hr-line-dashed"></div>

                            <div class="form-group">

                                @Html.LabelFor(model => model.Phone, new { @class = "col-sm-2 control-label" })

                                <div class="col-sm-10">
                                    @Html.EditorFor(model => model.User.Phone)
                                    @Html.ValidationMessageFor(model => model.User.Phone, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">

                                @Html.LabelFor(model => model.User.Gender, new { @class = "col-sm-2 control-label" })

                                <div class="col-sm-10">
                                    @Html.EnumDropDownListFor(model => model.User.Gender, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.User.Gender, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">

                                @Html.LabelFor(model => model.User.Bio, new { @class = "col-sm-2 control-label" })

                                <div class="col-sm-10">
                                    @Html.TextAreaFor(model => model.User.Bio, new { @class = "form-control", @width = 120 })
                                    @Html.ValidationMessageFor(model => model.User.Bio, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="form-group">
                                @Html.LabelFor(model => model.User.ProfilePicturePath, new { @class = "col-sm-2 control-label" })
                                <div class="col-sm-10">
                                    <input type="file" name="file" />
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" class="btn btn-primary" value="Create" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>


@section Styles {
    @Styles.Render("~/Content/plugins/iCheck/iCheckStyles")
    @Styles.Render("~/plugins/laddaStyles")
    @Styles.Render("~/plugins/dataPickerStyles")
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/plugins/iCheck")
    @Scripts.Render("~/plugins/ladda")
    @Scripts.Render("~/plugins/dataPicker")

    <script type="text/javascript">
        $(document).ready(function () {

            $('.i-checks').iCheck({
                checkboxClass: 'icheckbox_square-green',
                radioClass: 'iradio_square-green',
            });

            var l = $( '.ladda-button-demo' ).ladda();
            l.click(function()
            {
                // Start loading
                l.ladda( 'start' );
                // Do something in backend and then stop ladda
                // setTimeout() is only for demo purpose
                //setTimeout(function(){
                //    l.ladda('stop');
                //},2000)
            });

            $('#data .input-group.date').datepicker({
                todayBtn: "linked",
                keyboardNavigation: false,
                forceParse: false,
                calendarWeeks: true,
                autoclose: true
            });

        });
    </script>
}


